scalar Year

scalar Date

scalar EmailAddress

scalar CleanString

scalar Password

scalar URL

interface User {
	id: ID!
	email: EmailAddress!
	absolute_year: Year!
}

type Applicant implements User {
	id: ID!
	email: EmailAddress!
	absolute_year: Year!
	applicant_year: Int!
	first_name: CleanString!
	middle_name: CleanString!
	last_name: CleanString!
	applications: [Application!]
}

type Mentor implements User { 
	id: ID!
	email: EmailAddress!
	name: CleanString!
	absolute_year: Year!
	organization: [Organization!]!
	projects: [Project!]!
}


type OrgAdmin implements User {
	id: ID!
	email: EmailAddress!
	name: CleanString!
	absolute_year: Year!
	organization: Organization!
}

type SuperAdmin implements User {
	id: ID!
	email: EmailAddress!
	name: CleanString!
	absolute_year: Year!
}

type Application {
	accepted: Boolean
	result: Boolean
	project: Project!
	applicant: Applicant!
	proposal: URL!
	absolute_year: Year!
}

type Organization {
	id: ID!
	name: CleanString!
	description: String!
	projects: [Project!]!
	mentors: [Mentor!]!
	OrgAdmins: [OrgAdmin!]!
}

type Project {
	id: ID!
	name: CleanString!
	work: CleanString!
	deliverables: CleanString!
	prerequisites: [CleanString!]!
	absolute_year: Year!
	project_start_date: Date!
	project_end_date: Date!
	organization: Organization!
	mentors: [Mentor!]!
	applications: [Application!]!
	contributors: [Applicant!]!
}


type Query {
	projects(absolute_year: Year, org_id: ID, mentor_id: ID, applicant_id: ID): [Project!]!
	project(project_id: ID!): Project!
	organizations(absolute_year: Year): [Organization!]!
	organization(org_id: ID!): Organization!
	applications(absolute_year: Year, applicant_id: ID, project_id: ID, org_id: ID): [Application!]!	
	mentors(absolute_year: Year, org_id: ID): [Mentor!]!
	mentor(mentor_id: ID!): Mentor!
	applicants(absolute_year: Year): [Applicant!]!
	applicant(applicant_id: ID!): Applicant!
	orgAdmin(org_admin_id: ID!): OrgAdmin!
	orgAdmins(org_id: ID): [OrgAdmin!]!	
	superAdmins(absolute_year: Year): [SuperAdmin!]!
	superAdmin(super_admin_id: ID!): SuperAdmin!
}

type AuthPayload {
	auth: String!
	refresh: String!
}

type LoginInfo {
	auth: String!
	refresh: String!
	type: String!
	id: ID!
}

type Mutation {
	login(email: EmailAddress!, password: Password!): LoginInfo!
	signUp(
		reg_num: ID!,
		email: EmailAddress!, 
		password: Password!,
		first_name: CleanString!,
		middle_name: CleanString!,
		last_name: CleanString!,	
	): Boolean!
	logout(refresh: String!): Boolean!
	changePassword(refresh: String!, oldPassword: Password!, newPassword: Password!): Boolean! 
	renewAuth(refresh: String!): LoginInfo!
	addApplication(project_id: ID!, applicant_id: ID!, proposal: URL!): Application!
	deleteApplication(project_id: ID!, applicant_id: ID!): Boolean!
	acceptOrRejectApplication(project_id: ID!, applicant_id: ID!, accept: Boolean!): Application!
	passOrFailApplication(project_id: ID!, applicant_id: ID!, result: Boolean!): Application!
	addProject(
		name: CleanString!,
		work: CleanString!,
		deliverables: CleanString!,
		prerequisites: [CleanString!]!,
		absolute_year: Year!,
		project_start_date: Date!,
		project_end_date: Date!,
		org_id: ID!,
		mentor_ids: [ID!]!,
	): Project!
	deleteProject(project_id: ID!): Boolean!
	updateProject(
		project_id: ID!,
		name: CleanString,
		work: CleanString,
		deliverables: CleanString,
		prerequisites: [CleanString!], 
		startDate: Date,
		endDate: Date,
		organization: CleanString,
		mentors: CleanString,
	): Project!
	addApplicant(
		reg_num: ID!,
		email: EmailAddress!,
		password: Password!,
		first_name: CleanString!,
		middle_name: CleanString!,
		last_name: CleanString!,
	): Applicant!
	deleteApplicant(applicant_id: ID!): Boolean!
	editApplicant(applicant_id: ID!, email: EmailAddress, password: Password, applicant_year: Int): Applicant!
	addMentor(
		reg_num: ID!,
		email: EmailAddress!,
		password: Password!,
		name: CleanString!,
		org_id: [ID!]!,
	): Mentor!
	deleteMentor(mentor_id: ID!): Boolean!
	addOrganization(org_name: CleanString!, description: CleanString!): Organization!
	deleteOrganization(org_id: ID!): Boolean!
	addOrgAdmin(
		reg_num: ID!,
		email: EmailAddress!,
		password: Password!,
		name: CleanString!,
		absolute_year: Year!,
		org_id: ID!,
	): OrgAdmin!
	deleteOrgAdmin(org_admin_id: ID!): Boolean!
	addMentorToOrg(mentor_id: ID!, org_id: [ID!]!): Mentor!
	removeMentorFromOrg(mentor_id: ID!, org_id: [ID!]!): Mentor!
	addMentorToProject(mentor_id: ID!, project_id: [ID!]!): Mentor!
	removeMentorFromProject(mentor_id: ID!, project_id: [ID!]!): Mentor!
	addPrerequisites(project_id: ID!, prerequisites: [CleanString!]!): Project!
	removePrerequisites(project_id: ID!, prerequisites: [CleanString!]!): Project!
	updateProposal(project_id: ID!, applicant_id: ID!, proposal: URL!): Application!
}
